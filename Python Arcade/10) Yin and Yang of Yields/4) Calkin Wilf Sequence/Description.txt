The Calkin-Wilf tree is a tree in which the vertices correspond 1-for-1 to the positive rational numbers. The tree is rooted at the number 1, and any rational number expressed in simplest terms as the fraction a / b has as its two children the numbers a / (a + b) and (a + b) / b. Every positive rational number appears exactly once in the tree. 

The Calkin-Wilf sequence is the sequence of rational numbers generated by a breadth-first traversal of the Calkin-Wilf tree, where the vertices of the same level are traversed from left to right (as displayed in the image above). The sequence thus also contains each rational number exactly once.

Given a rational number, your task is to return its 0-based index in the Calkin-Wilf sequence.

Example

For number = [1, 3], the output should be
calkinWilfSequence(number) = 3.

1 / 3 is the 3rd 0-based number in the sequence.

Input/Output

[time limit] 4000ms (py)
[input] array.integer number

A positive rational number given as a reduced fraction.

Guaranteed constraints:
number.length = 2.

[output] integer

The 0-based index of the number in the Calkin-Wilf sequence.

It is guaranteed that the answer is not greater than 106.